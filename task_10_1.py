'''
1.Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора 
класса (метод __init__()), который должен принимать данные 
(список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, 
расположенных в виде прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.

Следующий шаг — реализовать перегрузку метода __str__() для вывода 
матрицы в привычном виде.
Далее реализовать перегрузку метода __add__() для сложения двух объектов 
класса Matrix (двух матриц). Результатом сложения должна быть новая 
матрица.
Подсказка: сложение элементов матриц выполнять поэлементно. 
Первый элемент первой строки первой матрицы складываем с первым 
элементом первой строки второй матрицы и пр.

'''

class Matrix():

    def __init__(self, mx) -> None:
        self.matrix = mx
        self.i = len(mx)
        self.j = len(mx[0])
        z=1
    
    def get_matrix(self):
        return self.matrix

    def __str__(self):
        return str('\n'.join(['\t'.join([str(j) for j in i]) for i in self.matrix]))

    def __add__(self, m2):
        mx_b = m2.get_matrix()
        bi = len(mx_b)
        bj = len(mx_b[0])
        mx_new = [[0]*bj]*bi
        if self.i == bi and self.j == bj:
            for i in range(self.i):
                for j in range(self.j):
                    mx_new[i][j] = self.matrix[i][j] + mx_b[i][j]
        return Matrix(mx_new)
        

zz = [[0]*3]*4

m1 = Matrix([[1,2,3],[3,4,5]])
m2 = Matrix([[1,2,3],[3,4,5]])
m3 = m1 + m2
print(m3, '\n',type(m3))
